@startuml
class Persona {
  - nombre : String [100]
  - apellido : String [100]
  - email : String [100]
  - telefono : int [20]
  + getNombre() : String
  + getApellido() : String
  + getEmail() : String
  + getTelefono() : int
  + setNombre(nombre : String)
  + setApellido(apellido : String)
  + setEmail(email : String)
  + setTelefono(telefono : int)
}

class Cliente {
  - nombreCliente : String [100]
  - apellidoCliente : String [100]
  - email : String [100]
  - telefono : int [20]
  + solicitarTurno(servicio : Servicio, fechaHora : DateTime)
  + cancelarTurno(turno : Turno)
  + verHistorialTurnos() : List<Turno>
}

class Profesional {
  - nombreProfesional : String [100]
  - especialidad : String
  + realizarServicio(turno : Turno)
}

class Administrador {
  - telefonoAdministrador : int [20]
  + asignarProfesional(turno : Turno, profesional : Profesional)
  + crearServicio(tipo : String, precio : Float, duracion : String) : Servicio
  + modificarServicio(servicio : Servicio)
  + eliminarServicio(servicio : Servicio)
}

class Turno {
  - fechaHora : DateTime [15]
  - precioTotal : Float [6]
  - estado : String
  + calcularPrecioServicios(listaServicios : List<Servicio>) : Float
  + cambiarEstado(nuevoEstado : String)
}

class Servicio {
  - tipo : String [15]
  - precio : Float [6]
  - duracion : String
  + getTipo() : String
  + getPrecio() : Float
  + getDuracion() : String
  + setTipo(tipo : String)
  + setPrecio(precio : Float)
  + setDuracion(duracion : String)
}

' Relaciones
Persona <|-- Cliente
Persona <|-- Profesional
Persona <|-- Administrador

Cliente "1" -- "N" Turno : solicita >
Profesional "1" -- "N" Turno : atiende >
Administrador "1" -- "N" Servicio : gestiona >
Turno "1" -- "N" Servicio : incluye >
@enduml